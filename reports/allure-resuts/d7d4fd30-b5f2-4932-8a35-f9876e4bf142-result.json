{"name": "test_put_livros_invalid_payload[payload_vazio-400]", "status": "broken", "statusDetails": {"message": "playwright._impl._api_types.Error: connect ETIMEDOUT 18.212.198.90:3000\n=========================== logs ===========================\n→ PUT http://ec2-18-212-198-90.compute-1.amazonaws.com:3000/livros/2\n  user-agent: Playwright/1.35.0 (x64; windows 10.0) python/3.11\n  accept: */*\n  accept-encoding: gzip,deflate,br\n============================================================", "trace": "payload = '', code = 400\n\n    @pytest.mark.crud_livros\n    @pytest.mark.parametrize(\"payload, code\", examples_put_livraria_invalid_payload)\n    def test_put_livros_invalid_payload(payload, code):\n        payload = Common.incorrect_payload(payload)\n        ApiUtils.payload_parse(payload)\n>       response = PutLivrariaCLient.put_livros(payload, 2)\n\ntest_put_livraria.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\clients\\put_livraria_client.py:11: in put_livros\n    response = context.put(f\"{os.environ['BASE_URL']}/{id}\", data=payload)\n..\\..\\venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:18762: in put\n    self._sync(\n..\\..\\venv\\Lib\\site-packages\\playwright\\_impl\\_fetch.py:221: in put\n    return await self.fetch(\n..\\..\\venv\\Lib\\site-packages\\playwright\\_impl\\_fetch.py:285: in fetch\n    return await self._inner_fetch(\n..\\..\\venv\\Lib\\site-packages\\playwright\\_impl\\_fetch.py:369: in _inner_fetch\n    response = await self._channel.send(\n..\\..\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n..\\..\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:482: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Channel object at 0x0000019E74F72510>\nmethod = 'fetch'\nparams = {'method': 'PUT', 'url': 'http://ec2-18-212-198-90.compute-1.amazonaws.com:3000/livros/2'}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.Error: connect ETIMEDOUT 18.212.198.90:3000\nE       =========================== logs ===========================\nE       → PUT http://ec2-18-212-198-90.compute-1.amazonaws.com:3000/livros/2\nE         user-agent: Playwright/1.35.0 (x64; windows 10.0) python/3.11\nE         accept: */*\nE         accept-encoding: gzip,deflate,br\nE       ============================================================\n\n..\\..\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:97: Error"}, "attachments": [{"name": "stderr", "source": "b2b69fa0-1032-485b-95d9-199b320006b0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "payload", "value": "'payload_vazio'"}, {"name": "code", "value": "400"}], "start": 1694192353920, "stop": 1694192457880, "uuid": "262501e2-7fca-4208-aaba-12bf0bde5444", "historyId": "dde8584eb29662ce30e5310a84c72a9d", "testCaseId": "922a90969405498155f8eea146ca4028", "fullName": "pytests.specs.test_put_livraria#test_put_livros_invalid_payload", "labels": [{"name": "tag", "value": "crud_livros"}, {"name": "parentSuite", "value": "pytests.specs"}, {"name": "suite", "value": "test_put_livraria"}, {"name": "host", "value": "MGA10465"}, {"name": "thread", "value": "22412-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pytests.specs.test_put_livraria"}]}